# SCSPAD 3.31 Andrey Filippov
# Use this file with Xilinx software
# Project: ~/PCB/10353/REVB/10353b
# Created: Sat Jan 20 01:40:47 2007

#Only pinout
NET "PXD<0>"             LOC = "J3" ;
NET "PXD<1>"             LOC = "H6" ;
NET "PXD<2>"             LOC = "J2" ;
NET "PXD<3>"             LOC = "H5" ;
NET "PXD<4>"             LOC = "J1" ;
NET "PXD<5>"             LOC = "G5" ;
NET "PXD<6>"             LOC = "H4" ;
NET "PXD<7>"             LOC = "G4" ;
NET "PXD<8>"             LOC = "G3" ;
NET "PXD<9>"             LOC = "H3" ;

NET "DCLK"               LOC = "L3" ;

NET "BPF"                LOC = "K5" ;
NET "VACT"               LOC = "K1" ;
NET "HACT"               LOC = "J5" ;
NET "MRST"               LOC = "E3" ;
NET "ARO"                LOC = "C1" ;
NET "ARST"               LOC = "E1" ;
NET "SCL0"               LOC = "G2" ;
NET "SDA0"               LOC = "E4" ;

NET "CNVSYNC"            LOC = "B1" ;
NET "CNVCLK"             LOC = "B2" ;

NET "SENSPGM"            LOC = "D1" ;

NET "EXT<0>"             LOC = "C4" ;
NET "EXT<1>"             LOC = "C5" ;
NET "EXT<2>"             LOC = "A4" ;
NET "EXT<3>"             LOC = "A5" ;
NET "EXT<4>"             LOC = "D6" ;
NET "EXT<5>"             LOC = "C6" ;
NET "EXT<6>"             LOC = "C7" ;
NET "EXT<7>"             LOC = "B7" ;
NET "EXT<8>"             LOC = "E7" ;
NET "EXT<9>"             LOC = "D7" ;
NET "EXT<10>"            LOC = "F8" ;
NET "EXT<11>"            LOC = "E8" ;


NET "CLK3"               LOC = "A8" ;
NET "CLK2"               LOC = "C9" ;
NET "CLK4"               LOC = "B8" ;
NET "CLK1"               LOC = "A10" ;
NET "CLK0"               LOC = "A9" ;

NET "LDQS"               LOC = "N8" ;
NET "UDQS"               LOC = "P8" ;

NET "SDD<0>"             LOC = "R14" ;
NET "SDD<1>"             LOC = "T12" ;
NET "SDD<2>"             LOC = "N12" ;
NET "SDD<3>"             LOC = "N10" ;
NET "SDD<4>"             LOC = "R11" ;
NET "SDD<5>"             LOC = "N9" ;
NET "SDD<6>"             LOC = "M9" ;
NET "SDD<7>"             LOC = "L8" ;
NET "SDD<8>"             LOC = "P9" ;
NET "SDD<9>"             LOC = "P10" ;
NET "SDD<10>"            LOC = "M10" ;
NET "SDD<11>"            LOC = "P11" ;
NET "SDD<12>"            LOC = "P12" ;
NET "SDD<13>"            LOC = "R13" ;
NET "SDD<14>"            LOC = "T13" ;
NET "SDD<15>"            LOC = "P14" ;

NET "SDA<0>"             LOC = "P1" ;
NET "SDA<1>"             LOC = "K3" ;
NET "SDA<2>"             LOC = "M1" ;
NET "SDA<3>"             LOC = "K2" ;
NET "SDA<4>"             LOC = "T4" ;
NET "SDA<5>"             LOC = "M4" ;
NET "SDA<6>"             LOC = "T5" ;
NET "SDA<7>"             LOC = "P5" ;
NET "SDA<8>"             LOC = "N5" ;
NET "SDA<9>"             LOC = "R6" ;
NET "SDA<10>"            LOC = "N1" ;
NET "SDA<11>"            LOC = "P6" ;
NET "SDA<12>"            LOC = "P7" ;
NET "SDA<13>"            LOC = "P2" ;
NET "SDA<14>"            LOC = "L4" ;

NET "SDWE"               LOC = "M7" ;
NET "SDCAS"              LOC = "N7" ;
NET "SDRAS"              LOC = "M6" ;

NET "SDLDM"              LOC = "M8" ;
NET "SDUDM"              LOC = "T8" ;

#NET "SDCLK"              LOC = "R2" | IOSTANDARD = "DIFF_SSTL2_I" ; 
NET "SDCLK"              LOC = "R2" ; 
NET "SDCLK_FB"           LOC = "R3" ; 
NET "SDNCLK"             LOC = "R1" ; 
NET "SDNCLK_FB"          LOC = "T3" ; 


NET "SDCLKE"             LOC = "N6"  ;

NET "D<0>"               LOC = "M16" ;
NET "D<1>"               LOC = "N15" ;
NET "D<2>"               LOC = "N16" ;
NET "D<3>"               LOC = "L13" ;
NET "D<4>"               LOC = "P16" ;
NET "D<5>"               LOC = "N14" ;
NET "D<6>"               LOC = "R16" ;
NET "D<7>"               LOC = "P15" ;
NET "D<8>"               LOC = "R15" ;
NET "D<9>"               LOC = "L12" ;
NET "D<10>"              LOC = "C11" ;
NET "D<11>"              LOC = "A13" ;
NET "D<12>"              LOC = "B11" ;
NET "D<13>"              LOC = "D9"  ;
NET "D<14>"              LOC = "B10" ;
NET "D<15>"              LOC = "A12" ;
NET "D<16>"              LOC = "A7"  ;
NET "D<17>"              LOC = "K12" ;
NET "D<18>"              LOC = "E9"  ;
NET "D<19>"              LOC = "B4"  ;
NET "D<20>"              LOC = "F9"  ;
NET "D<21>"              LOC = "C3"  ;
NET "D<22>"              LOC = "H11" ;
NET "D<23>"              LOC = "B6"  ;
NET "D<24>"              LOC = "K14" ;
NET "D<25>"              LOC = "E10" ;
NET "D<26>"              LOC = "K15" ;
NET "D<27>"              LOC = "L14" ;
NET "D<28>"              LOC = "L15" ;
NET "D<29>"              LOC = "K13" ;
NET "D<30>"              LOC = "C8"  ;
NET "D<31>"              LOC = "D8"  ;

NET "A<0>"               LOC = "D14" ;
NET "A<1>"               LOC = "F13" ;
NET "A<2>"               LOC = "F12" ;
NET "A<3>"               LOC = "E11" ;
NET "A<4>"               LOC = "E13" ;
NET "A<5>"               LOC = "E16" ;
NET "A<6>"               LOC = "F14" ;
NET "A<7>"               LOC = "F15" ;
NET "A<8>"               LOC = "G14" ;
NET "A<9>"               LOC = "G13" ;
NET "A<10>"              LOC = "G16" ;
NET "A<11>"              LOC = "G15" ;
NET "A<12>"              LOC = "H12" ;
NET "BA<0>"              LOC = "H14" ;
NET "BA<1>"              LOC = "H15" ;

NET "SYS_SDWE"           LOC = "J13" ;
NET "SYS_SDCAS"          LOC = "J16" ;
NET "SYS_SDRAS"          LOC = "K16" ;

NET "SYS_SDCLKI"         LOC = "J12" ;
NET "SYS_SDCLK"          LOC = "J14" ;
NET "SYS_BUSEN"          LOC = "C16" ;

NET "WE"                 LOC = "M13" ;
NET "OE"                 LOC = "M14" ;
NET "CE"                 LOC = "D16" ;
NET "CE1"                LOC = "E14" ;

NET "DREQ0"              LOC = "C15" ;
NET "DACK0"              LOC = "B14" ;
NET "DREQ1"              LOC = "D10" ;
NET "DACK1"              LOC = "A14" ;

NET "IRQ"                LOC = "D15" ;
NET "BG"                 LOC = "D11" ;
NET "BRIN"               LOC = "B16" ;
NET "BROUT"              LOC = "B13" ;

#assign an output with SSTL2_I so VREF will be used in bank 3
NET "DUMMYVFEF"          LOC = "J4" ;

#week pulldown to fool the software into keeping signals
NET "ALWAYS0"            LOC = "J6" ;

#end of pinout

################### Timing Constraints #########################

NET "CLK0" TNM_NET = "CLK0";
NET "CLK1" TNM_NET = "CLK1";
NET "CLK1" CLOCK_DEDICATED_ROUTE = FALSE; #phase is not critical, just clock generator
NET "CLK0" CLOCK_DEDICATED_ROUTE = FALSE; #phase is not critical, just clock generator
PIN "i_dcm333/i_dcm2.CLK90" CLOCK_DEDICATED_ROUTE = FALSE;

#TIMESPEC "TS_CLK0" = PERIOD "CLK0" 7.25  ns HIGH 50 %; #03534018B
#TIMESPEC "TS_CLK0" = PERIOD "CLK0" 7.15  ns HIGH 50 %; #reports "N/A" but is needed for derivative signals
TIMESPEC "TS_CLK0" = PERIOD "CLK0" 7.1  ns HIGH 50 %;

TIMESPEC "TS_CLK1" = PERIOD "CLK1" 10.4 ns HIGH 50 %; #96MHz
#TIMESPEC "TS_CLK1" = PERIOD "CLK1" 10.6 ns HIGH 50 %; #trying to meet other

#TIMESPEC "TS_CLK1" = PERIOD "CLK1" 18.4 ns HIGH 50 %; #TEMPORARY TO FIND A PROBLEM

TIMEGRP "CPU_ADDR" =   PADS("A<*>");
TIMEGRP "CPU_ADDRCE" = "CPU_ADDR"  PADS("CE*");
TIMEGRP "CPU_DATA" =   PADS("D<*>");
TIMEGRP "WE" =         PADS("WE");
TIMEGRP "OE" =         PADS("OE");
TIMEGRP "DACK_PAD"=    PADS("DACK*");
TIMEGRP "DREQ_PAD"=    PADS("DREQ*");
TIMEGRP "ALLPADS"=     PADS("*");

NET "idack0" TPTHRU = "IDACK0_TP";
NET "idack1" TPTHRU = "IDACK1_TP";
#NET "idreq0" TPTHRU = "IDREQ0_TP";va
#NET "idreq1" TPTHRU = "IDREQ1_TP";
#TIMESPEC "TS_DACK_DREQ0" = FROM "DACK_PAD" THRU "IDACK0_TP" THRU "IDREQ0_TP" TO "DREQ_PAD" 9.5 ns;
#TIMESPEC "TS_DACK_DREQ1" = FROM "DACK_PAD" THRU "IDACK1_TP" THRU "IDREQ1_TP" TO "DREQ_PAD" 9.5 ns;
NET "*/cwr" TNM_NET = "TNM_CWR";
TIMEGRP "TG_CWRDEST" =   "TNM_CWR" except LATCHES ("*"); # RAMS, FFS
###MARK1# TIMEGRP "TG_LATCHES_A" =  LATCHES ("i_sysinterface/i_a*");
NET "DACK*" TNM_NET = "DACK";
NET "SDA0*" TNM_NET = "SDA0";
NET "sclk0" TNM_NET = "TNM_CLK0";
NET "xclk" TNM_NET = "TNM_XCLK";
NET "pclk" TNM_NET = "TNM_PCLK";
NET "i_sensorpads/i_sensor_phase/gclk_idata" TNM_NET = "TNM_GCLK_IDATA";

NET "i_sensorpads/i_sensor_phase/en_idata" TNM_NET = "TNM_EN_IDATA";

TIMESPEC "TS_PCLK_GCLK_IDATA" = FROM "TNM_PCLK" TO "TNM_GCLK_IDATA" TIG;
TIMESPEC "TS_GCLK_IDATA_PCLK" = FROM "TNM_GCLK_IDATA" TO "TNM_PCLK" TIG;

#TIMESPEC "TS_GCLK_IDATA_PERIOD" = PERIOD "TNM_GCLK_IDATA" "TS_CLK1" / 2;

TIMESPEC "TS_DOUBLECYC_IDATA" = FROM "TNM_EN_IDATA" TO "TNM_EN_IDATA" "TS_CLK1";

NET "i_sensorpads/i_sensor_phase/phase_hact_sel_sync*" TIG;
NET "i_sensorpads/i_sensor_phase/mode_alt_sync" TIG;
NET "i_sensorpads/i_sensor_phase/mode_12bits_sync" TIG;
NET "i_sensorpads/i_sensor_phase/mode_14bits_sync" TIG;
NET "hact_length*" TIG;
NET "cb_*" TIG;

TIMEGRP "TG_CLK1" =   PADS("CLK1");
TIMEGRP "TG_DCLK" =   PADS("DCLK");

#TIMESPEC "TS_SENSORCLOCK" = FROM  "TG_CLK1" TO "TG_DCLK" 14.0 ns;

#######TIMESPEC "TS_OE_TO_DATA" = FROM "OE" TO "CPU_DATA" 10.3 ns; # temporary, with proxies
#TIMESPEC "TS_OE_TO_DATA" = FROM "OE" TO "CPU_DATA" 14.0ns ; # with DRIVE = 4 ; # default
TIMESPEC "TS_OE_TO_DATA" = FROM "OE" TO "CPU_DATA" 12.0ns ; # with DRIVE = 8 

#normal
#######TIMESPEC "TS_AXIS_READ" = FROM "CPU_ADDRCE" TO "CPU_DATA" 16 ns; #17.5 ns;
#TIMESPEC "TS_AXIS_READ" = FROM "CPU_ADDRCE" TO "CPU_DATA" 19 ns; # with DRIVE = 4 ; # default
TIMESPEC "TS_AXIS_READ" = FROM "CPU_ADDRCE" TO "CPU_DATA" 17 ns; # with DRIVE = 8

###MARK1#TIMESPEC "TS_WR_ADDR" = FROM "TG_LATCHES_A" TO "TG_CWRDEST" 9.7 ns; #temporary, with proxies
TIMESPEC "TS_WR_DATA" = FROM "CPU_DATA" TO "TG_CWRDEST" 9 ns; # temporary, with proxies
TIMESPEC "TS_WE" = FROM "WE" TO "TNM_CWR" 11.5 ns; #

#########TIMESPEC "TS_DACK0" = FROM "DACK" TO "ALLPADS" 15 ns;
TIMESPEC "TS_DACK0" = FROM "DACK" TO "ALLPADS" 17 ns;
#NET "*dcr<*>" TIG;  # new freedom

 # new freedom
 
 
TIMEGRP "TG_ALL_SYNC"=      FFS RAMS MULTS;
TIMEGRP "TG_DOUBLECYCS2"= FFS("i_mcontr/i_descrproc/seq_par*")
					      	  FFS("i_mcontr/i_descrproc/sa*")
                          FFS("i_mcontr/i_descrproc/nxtTL*")
								  FFS("i_mcontr/i_descrproc/tile*")
								  FFS("i_mcontr/i_descrproc/mode*")
						        FFS("i_mcontr/i_descrproc/WnR*")
								  FFS("i_mcontr/i_descrproc/depend*")
								  FFS("i_mcontr/i_descrproc/nextFrame*")
						        FFS("i_mcontr/i_descrproc/suspXfer*")
								  FFS("i_mcontr/i_descrproc/lineNumSource*")
					           FFS("i_mcontr/i_descrproc/lineNumDest*")
					           FFS("i_mcontr/i_descrproc/prevStripSource*")
					           FFS("i_mcontr/i_descrproc/last_lines_reg*")
					           FFS("i_mcontr/i_descrproc/first_tile_reg*")
					           FFS("i_mcontr/i_descrproc/first_tile_dest*")
					           FFS("i_mcontr/i_descrproc/nxtTFr*")
					           FFS("i_mcontr/i_descrproc/srcAtStart*")
                          MULTS("i_mcontr/i_descrproc/linAddr*");

TIMESPEC "TS_DOUBLECYCS2" = FROM "TG_DOUBLECYCS2" TO "TG_ALL_SYNC" "TS_CLK0" * 2;
TIMEGRP "TG_FAST_SRC3"= FFS("*stepsE*") FFS("*stepsI*") FFS("*stepsDwe*");
TIMEGRP "TG_SLOW_SRC3" =   TG_ALL_SYNC EXCEPT "TG_FAST_SRC3";
TIMEGRP "TG_DOUBLEDEST3"= FFS("i_mcontr/i_descrproc/seq_par*")
					      	  FFS("i_mcontr/i_descrproc/sa*")
                          FFS("i_mcontr/i_descrproc/nxtTL*")
								  FFS("i_mcontr/i_descrproc/tile*")
								  FFS("i_mcontr/i_descrproc/mode*")
						        FFS("i_mcontr/i_descrproc/WnR*")
								  FFS("i_mcontr/i_descrproc/depend*")
								  FFS("i_mcontr/i_descrproc/nextFrame*")
								  FFS("i_mcontr/i_descrproc/nextBlocksEn*")
						        FFS("i_mcontr/i_descrproc/suspXfer*")
								  FFS("i_mcontr/i_descrproc/lineNumSource*")
					           FFS("i_mcontr/i_descrproc/lineNumDest*")
					           FFS("i_mcontr/i_descrproc/prevStripSource*")
					           FFS("i_mcontr/i_descrproc/rovr*")
					           FFS("i_mcontr/i_descrproc/last_lines_reg*")
					           FFS("i_mcontr/i_descrproc/first_tile_reg*")
					           FFS("i_mcontr/i_descrproc/first_tile_dest*")
					           FFS("i_mcontr/i_descrproc/nxtTFr*")
					           FFS("i_mcontr/i_descrproc/nxtTF_p*")
					           FFS("i_mcontr/i_descrproc/srcAtStart*")
                          MULTS("i_mcontr/i_descrproc/linAddr*");
TIMESPEC "TS_DOUBLECYCS3" = FROM "TG_SLOW_SRC3" TO "TG_DOUBLEDEST3" "TS_CLK0" * 2;
## Next - redundant?
##TIMESPEC "TS_DOUBLECYCS4" =  FROM FFS("*i_chArbit/chNum*") TO  "TG_DOUBLEDEST3" TS_CLK0*2;
TIMEGRP "TG_HUFFRAMS"=    RAMS        ("*i_huffman*") ;

#FIXME: Constraint <TIMEGRP "TG_HUFFFFS" ... does not match any design objects.
TIMEGRP "TG_HUFFFFS"=     FFS         ("*i_huffman*")
                          FFS         ("*i_stuffer*") ; 
								  
TIMEGRP "TG_HUFFLATCHES"= LATCHES     ("*i_huffman*") ;
# some registers in Huffman module are isolated from others through latches too - never used?
##TIMEGRP  "TG_HUFFFFS_ISOLOUT" =  FFS         ("*i_huff_fifo/load_q");

TIMEGRP  "TG_STUFFER_WAS_READY_EARLY" = LATCHES ("i_compressor/i_huffman/i_stuffer_was_rdy_early") ;
TIMEGRP  "TG_HUFF_FIFO_LOAD_Q"        = FFS     ("i_compressor/i_huffman/i_huff_fifo/load_q") ;
TIMEGRP  "TG_COMPRESSOR"=               FFS     ("*i_compressor*") ;
### THe two below constraints are not needed, they are covered by "TS_HUFFLATCHES" and "TS_HUFFLATCHESI"
## TIMESPEC "TS_HUFF_FIFO_LOAD_Q"=         FROM "TG_STUFFER_WAS_READY_EARLY"  TO   "TG_HUFFFFS" "TS_CLK0" * 0.625;
## TIMESPEC "TS_STUFFER_WAS_READY_EARLY"=  FROM "TG_HUFFFFS" TO   "TG_STUFFER_WAS_READY_EARLY" "TS_CLK0" * 0.7;



TIMESPEC "TS_HUFFRAMS" = FROM "TG_HUFFRAMS" TO "TG_HUFFLATCHES" "TS_CLK0" * 0.85;
TIMESPEC "TS_HUFFLATCHES" = FROM "TG_HUFFLATCHES" TO "TG_HUFFFFS" "TS_CLK0" * 0.625;
TIMESPEC "TS_HUFFRAMSA" = FROM "TG_HUFFLATCHES" TO "TG_HUFFRAMS" "TS_CLK0" * 0.8625;
TIMESPEC "TS_HUFFLATCHESI" = FROM "TG_HUFFFFS" TO "TG_HUFFLATCHES" "TS_CLK0" * 0.6125;

NET "*enSDRAM" TIG;

#was already ignored from sclk0 to pclk
NET "*dcr*" TIG; 

NET "i_rtc353/acc*" TIG;
NET "i_rtc353/sec*" TIG;
NET "i_rtc353/usec*" TIG;
NET "i_rtc353/wsec*" TIG;
NET "i_rtc353/wusec*" TIG;
NET "i_rtc353/corr*" TIG;


#needed?
NET "i_camsync/ts_rcv_sec*" TIG;
NET "i_camsync/ts_rcv_usec*" TIG;
#NET "i_imu_logger/imu_in_word*" TIG;
NET "i_rtc353/psec*" TIG;
NET "i_rtc353/pusec*" TIG;
#NET "i_rtc353/esec*" TIG;
#NET "i_rtc353/eusec*" TIG;
#INST "i_imu_logger/i_buffer*" TIG;
#INST "i_imu_logger/config*" TIG;
#INST "i_imu_logger/enable*" TIG;



INST "*_tig_*" TIG;

#histogram

#NET "???"     TNM_NET = "TNM_PCLK";
NET "pclk2x"   TNM_NET = "TNM_PCLK2X";
TIMESPEC "TS_PCLK_PCLK2X" = FROM "TNM_PCLK" TO "TNM_PCLK2X" TIG;
#TIMESPEC "TS_PCLK2X_PCLK" = FROM "TNM_PCLK2X" TO "TNM_PCLK" TIG;



TIMEGRP "TG_HIST_DOUBLE_DEST"= FFS("*hist_post*");
TIMEGRP "TG_HIST_DOUBLE_SRC "= FFS("*hist_pre*");

TIMESPEC "TS_HIST_DOUBLECYC1" =  FROM FFS("*hist_pre*") TO  FFS("*hist_post*") "TS_CLK1" ;

INST "i_histogram/pos_left_*" TIG;
INST "i_histogram/pos_top_*" TIG;
INST "i_histogram/size_width_*" TIG;
INST "i_histogram/size_height_*" TIG;
INST "i_histogram/minus_pos_left_*" TIG;
INST "i_histogram/pos_left_is_zero*" TIG;

TIMEGRP  "TG_HIST_DOUBLE2_SRC"=  FFS("i_histogram/pix_cntr*");
TIMEGRP  "TG_HIST_DOUBLE2_DST"=  FFS("i_histogram/pix_cntr*")
                                 FFS("i_histogram/line_started*")
                                 FFS("i_histogram/line_ended*") ;
TIMESPEC "TS_HIST_DOUBLECYC2" = FROM "TG_HIST_DOUBLE2_SRC" TO "TG_HIST_DOUBLE2_DST" "TS_CLK1" ;



INST  "i_sensorpads/i_sensor_phase/rq_back*" TIG;

#compressor controls
INST "i_compressor/i_m_c*" TIG;
INST "i_compressor/i_coring_num*" TIG;
INST "i_compressor/i_compr_ifc/cmprs_en*" TIG;
INST "i_compressor/i_compr_ifc/cmprs_fmode*" TIG;
INST "i_compressor/i_compr_ifc/cmprs_mode*" TIG;
INST "i_compressor/i_compr_ifc/cmprs_qpage*" TIG;
INST "i_compressor/i_compr_ifc/cmprs_shift*" TIG;
INST "i_compressor/i_compr_ifc/i_bayer_shift*" TIG;
#INST "i_mcontr/i_descproc/bonded*" TIG;
INST "*bonded*" TIG;

#:Place:1018 - A clock IOB / clock component pair have been found that are
#   not placed at an optimal clock IOB / clock site pair. The clock component
#   <i_pclk> is placed at site <BUFGMUX_X1Y11>. The IO component <BPF> is placed
#   at site <K5>.  This will not allow the use of the fast path between the IO
#   and the Clock buffer. If this sub optimal condition is acceptable for this
#   design, you may use the CLOCK_DEDICATED_ROUTE constraint in the .ucf file to
#   demote this message to a WARNING and allow your design to continue. However,
#   the use of this override is highly discouraged as it may lead to very poor
#   timing results. It is recommended that this error condition be corrected in
#   the design. A list of all the COMP.PINs used in this clock placement rule is
#   listed below. These examples can be used directly in the .ucf file to
#   override this clock rule.

NET "BPF" CLOCK_DEDICATED_ROUTE = FALSE;

#Used with defined debug_mcontr_reset, comment out if disabled
INST "debug_mcontr_count*" TIG;